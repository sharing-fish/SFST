name: Test and Release
on:
  push:
    branches:
      main
  pull_request:
    branches:
      main
  workflow_dispatch:

permissions:
    contents: write
    pages: write
    id-token: write

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install
    
      - name: Lint code
        id: lint
        run: yarn lint
        continue-on-error: true

      - name: Fix lint issues if any
        if: ${{ steps.lint.outcome == 'failure' }}
        run: yarn lint --fix

    #   - name: Run tests # Uncomment when tests are implemented!
    #     run: yarn test

      - name: Build Typescript Definition
        run: yarn tsc

      - name: Build
        run: yarn build

      - name: Get version tag and changelog
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
            dry_run: true # useful for debugging workflow when true
            github_token: ${{ secrets.GITHUB_TOKEN }}
            default_bump: false


    # apply steps.tag_version.outputs.new_version to the version for the package.json
      - name: Update package.json
        run: |
          echo "Updating package.json version to ${{ steps.tag_version.outputs.new_version }}"
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.tag_version.outputs.new_version }}\"/" package.json

      - name: Fix any Backstage metadata
        run: yarn fix

      - name: Debug package.json
        run: cat package.json



      # Generate a token for the GitHub App to be able to push changes
      - name: Generate a Token
        id: app-token
        uses: actions/create-github-app-token@31c86eb3b33c9b601a1f60f98dcbfd1d70f379b4 # v1
        with:
            app-id: ${{ vars.GH_APP_ID }}
            private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
            owner: ${{ github.repository_owner }}

      - name: Use the Token to commit and push changes
        env:
            GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
            git config --global url."https://git:${GH_TOKEN}@github.com".insteadOf https://github.com
            git config --global user.name '${{ github.actor }}'
            git config --global user.email '${{ github.actor }}@users.noreply.github.com'
            if git diff-index --quiet HEAD; then
                echo "No changes to commit"
            else
                git commit -am "Apply lint fixes and update version to ${{ steps.tag_version.outputs.new_tag }} [skip ci]"
                git push -f
            fi

      - name: Publish to NPM
        if: steps.tag_version.outputs.new_tag != ''
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.tag_version.outputs.new_tag != ''
        env:
            GH_TOKEN: ${{ github.token }}
            TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
            git tag -a "${TAG}" -m "release $TAG"
            gh release create "${TAG}" \
                --generate-notes \
                --target "$(git rev-parse HEAD)"

    